{
  "dateHighlightedFormat": "yyyy-MM-dd'T'HH:mm:ss",
  "dateSavedFormat": "yyyy-MM-dd'T'HH:mm:ss",
  "apiKey": "1a09b6b0-7f65-419b-a542-67a17ab67ebb",
  "filter": "ALL",
  "syncAt": "2024-03-20T09:03:10",
  "customQuery": "in:inbox is:read",
  "template": "<%* /* ***VARIABLES*** */ \n\n/* **UTILIDADES** */ \n\nconst prefixes = [\"'\", \";\", \",\", \"¬ø\", \"¬°\", \"!\", \"&\", \"+\", \"¬ß\", \"¬¨\", \"=\", \"‚Äî\", \"-\", \"%\", \"¬∞\", \"_\"];\n\nconst icons = [\"üè´\", \"üéì\", \"\", \"‚ùì\", \"üí≠\", \"üí°\", \"üé®\", \"üìö\", \"üìö/üìó\", \"üìÉ\", \"üî¨\", \"üìú\", \"üóûÔ∏è\", \"üìπ\", \"üéß\", \"Otro\"];\n\nconst types = [\"Apuntes de Clase\", \"Material de Clase\", \"Curso\", \"Pregunta\", \"Pensamiento\", \"Idea\", \"Arte\", \"Libro\", \"Extracto\", \"Documentaci√≥n\", \"Paper\", \"Wikipedia\", \"Art√≠culo\", \"V√≠deo\", \"Podcast\", \"Otro\"];\n\nconst typesText = [\"üè´ Apuntes de Clase\", \"üéì Material de Clase\", \"Curso\", \"‚ùì Pregunta\", \"üí≠ Pensamiento\", \"üí° Idea\", \"üé® Arte\", \"üìö Libro\", \"üìó Extracto\", \"üìÉ Documentaci√≥n\", \"üî¨ Paper Cient√≠fico\", \"üìú Art√≠culo de Wikipedia\", \"üóûÔ∏è Art√≠culo de Internet\", \"üìπ V√≠deo\", \"üéß Podcast\", \"Otro...\"];\n\n/* **DOCUMENTO** */\n\n/* **Fuente** */  \nlet title = `{{title}}`.replace(/: /, \" - \");  \nlet author = \"{{{author}}}\";  \nlet link = \"{{{originalUrl}}}\";  \nlet description = `{{description}}`.replace(/\\n/, \" \");  \nlet published = moment(\"{{datePublished}}\").format(\"YYYY-MM-DD\");\n\n/* **Omnivore** */  \nlet id = \"{{id}}\";  \nlet saved = moment(\"{{dateSaved}}\").format(\"YYYY-MM-DD\"); \nlet read = moment(\"{{dateRead}}\").format(\"YYYY-MM-DD\");  \nlet note = `{{note}}`.replace(/\\n/, \" \");\n\n/* **Etiquetas** */  \nlet labels = [{{# labels}}\"{{{name}}}\".replace(\"_\", \" \"),{{/labels}}];\n\nconst etiquetas = function (l) {  \n    let e = \"\";   \n    if (l.length !== 0) {e = \"[[\" + l.join(\"]], [[\") + \"]]\";}  \n    return e;  \n};\n\n/* **Resaltados** */  \nlet highlights = [{{# highlights}}  \n    {  \n        id: \"{{highlightID}}\",  \n        date: \"{{dateHighlighted}}\",  \n        url: \"{{{highlightUrl}}}\",  \n        color: \"{{color}}\",  \n        text: `{{{text}}}`.replace(/\\n/g, \"<br/>\"),  \n        note: `{{{note}}}`.replace(/\\n/g, \"<br/>\"),  \n        labels: [{{# labels.length }}{{# labels}}\"{{{name}}}\", {{/labels}}{{/ labels.length}}]  \n    }, {{/ highlights}}];\n\n/* ***ACTUALIZACI√ìN*** */ \n\n/* **PREFIJOS** */  \nif (link.includes(\"wiki\")) {prefix = \"‚Äî\";}  \nelse if (/youtu.?be/.test(link)) {prefix = \"%\";}  \nelse if (labels.contains(\"ART√çCULO\")) {prefix = \"-\";}  \nelse if (labels.contains(\"DOCUMENTACI√ìN\")) {prefix = \"¬¨\";}  \nelse {prefix = \"_\";}\n\n/* **√çCONO Y TIPO** */  \nicon = icons[prefixes.indexOf(prefix)];  \ntype = types[prefixes.indexOf(prefix)];\n\n/* **RENOMBRAR ARCHIVO** */  \nif (link.includes(\"wiki\")) {await tp.file.rename(`${prefix} ${read} ${title}`);}  \nelse {await tp.file.rename(`${prefix} ${read} ${author} - ${title}`);}\n\n/* **METADATOS** */  \n\n/* **Aliases** */\n\nlet references;  \nlet aliases;\n\nreferences = [`\"${title}\"`, `\"${prefix} ${title}\"`, `\"‚ÜñÔ∏è ${title}\"`];\n\nif (!link.includes(\"wiki\") && !labels.includes(\"DOCUMENTACI√ìN\")) {  \n    references.push(`\"${author}\"`);  \n    references.push(`\"${prefix} ${author}\"`);  \n    references.push(`\"‚ÜñÔ∏è ${author}\"`);  \n    references.push(`\"${author} - ${title}\"`);  \n    references.push(`\"${prefix} ${author} - ${title}\"`);  \n    references.push(`\"‚ÜñÔ∏è ${author} - ${title}\"`);  \n}\n\naliases = \"\\n  - \" + references.join(\"\\n  - \");\n\n/* **Status** */\n\nlet status = (type == \"V√≠deo\" && !note)? \"üåò\": \"üåó\";\n\nlet publish = [\"Documentaci√≥n\", \"Wikipedia\", \"Art√≠culo\", \"V√≠deo\"].includes(type)? \"true\" : \"false\";\n\nif (labels.includes(\"DOCUMENTACI√ìN\")) {status = \"üåô\";}\n\n/* **YAML** */\n\ntR += `---\\n\\n`;  \ntR += `status: \"${status}\"\\n`;  \ntR += `tags: üì•/${icon}\\n`;  \ntR += `aliases: ${aliases}\\n`;  \ntR += `type: \"${type}\"\\n`;  \ntR += `publish: \"${publish}\"\\n`;  \ntR += `---\\n\\n`;  \n_%>\n\n<%* /* ***NOTA FUENTE*** */ %>\n\n<%* /* **JERARQU√çAS** */ %>\n\n<% tp.file.include(\"[[Jerarqu√≠as]]\") %>\n\n<%* /* **FICHA** */ %>\n\n# üìá Ficha\n\n<%* if (/youtu.?be/.test(link)) { %>![V√≠deo](<%* tR += link; %>)<%* } %>\n\n|  (fuente:: [<cite>{{{title}}}</cite>]({{{omnivoreUrl}}})) (referencia:: [üîó](<%* tR += link; %>))  |\n|:--------------------------------------------------------------------------------------------------:|\n|     <%* if (!(link.includes(\"wiki\"))) { %>**Autor:** (authors:: <%* tR += author; %>)<%* } %>      |\n| <%* if (!(link.includes(\"wiki\"))) { %>**Publicado:** (publicado:: <%* tR += published; %>)<%* } %> |\n|                         **Guardado:** (guardado:: [[<%* tR += saved; %>]])                         |\n|                  **Importado:** (importado:: [[<% tp.date.now(\"YYYY-MM-DD\") %>]])                  |\n|                  **Procesado:** (procesado:: [[<% tp.date.now(\"YYYY-MM-DD\") %>]])                  |\n\n{{# description }}**Descripci√≥n:** {{{ description }}}{{/ description }}\n\n‚ÜñÔ∏è (etiquetas:: <%* tR += etiquetas(labels); %>)\n\n<%* /* **CITADO** */ %>\n\n<% tp.file.include(\"[[0.1.2-Citado]]\") -%>\n\n<%* /* **APUNTES** */ _%>\n\n<%* /* **Funciones** */\n\n/* *Etiquetas* */\n\nconst tags = function(h) {  \n    let tag = \"\";  \n    if (h.note.includes(\"‚ùì\")){tag += \"#üì•/‚ùì \";} // Preguntas  \n    if (h.note.includes(\"üîé\")){tag += \"#üîî/üîé \";} // Buscar, referencias  \n    if (h.note.includes(\"üìï\")){tag += \"#üîî/üìï \";} // Vocabulario  \n    return tag;  \n};\n\n/* *Encabezados* */\n\nconst heading = function(h) {  \n    let nivel = /@h(?<nivel>\\d)/.exec(h.note).groups.nivel;  \n    let highlight = \"#\".repeat(parseInt(nivel) + 1) + \" \";  \n    highlight += `${h.text} \\n\\n`;  \n    highlight += `${tags(h)} \\n\\n`;  \n    highlight += `${h.note.replace(/@h\\d/, \"\")}\\n\\n---\\n\\n`;  \n    return highlight;  \n};\n\n/* *Citas Textuales* */\n\nconst quote = function(h) {  \n    let highlight = `\\n---\\n\\n`;  \n    highlight += `> ${h.text} ([‚ÜñÔ∏è](${h.url}))\\n\\n`; // Quote  \n    highlight += `${etiquetas(h.labels)}\\n\\n`; // Labels  \n    highlight += `${tags(h)}\\n\\n`;  // Tags  \n    highlight += `${h.note.replace(\"üìó\", \"\")}\\n\\n`; // Note  \n    highlight += `\\n---\\n\\n`;  \n    return highlight;  \n};\n\n/* *Apuntes* */\n\nconst apunte = function (h) {  \n    let highlight = \"\";  \n    highlight += `- [ ] `; // Task  \n    highlight += `${tags(h)}`; // Tags  \n    highlight += `[‚ÜñÔ∏è](${h.url}) `; // URL  \n    highlight += `<mark class=\"hltr-${h.color}\">`; // Highlight Color  \n    highlight += `${h.date} `; // Date  \n    highlight += `</mark>: `; // Close Highlight  \n    highlight += `${h.text} `; // Text  \n    highlight += `^${h.id}\\n`; // ID  \n    highlight += `    - ${h.note}\\n`; // Nota  \n    highlight += `    - ${etiquetas(h.labels)} \\n`; // Etiquetas   \n    return highlight;  \n};\n\n/* ==Resaltados== */\n\nconst highlight = function(h) {  \n    if (/@h\\d/.test(h.note)) {return heading(h);}  \n    else if (h.note.includes(\"üìó\")) {return quote(h);}  \n    else {return apunte(h);}  \n};\n %>\n\n# ‚úèÔ∏è Apuntes\n\n{{# note }}\n\n {{{ note }}}\n\n---\n {{/ note }}\n\n<%* for(let h of highlights){tR += highlight(h);} %>\n\n# ‚ùì Preguntas\n\n# üîî Revisar\n\n## üìï Vocabulario",
  "highlightOrder": "LOCATION",
  "syncing": false,
  "folder": "0-ENTRADA/0.1.D-Omnivore",
  "folderDateFormat": "yyyy-MM-dd",
  "endpoint": "https://api-prod.omnivore.app/api/graphql",
  "filename": "{{id}}",
  "filenameDateFormat": "yyyy-MM-dd",
  "attachmentFolder": "B-Adjuntos/Omnivore",
  "version": "1.10.4",
  "isSingleFile": false,
  "frequency": 0,
  "intervalId": 0,
  "frontMatterVariables": [],
  "frontMatterTemplate": "",
  "syncOnStart": false,
  "enableHighlightColorRender": false,
  "highlightManagerId": "omni",
  "highlightColorMapping": {
    "yellow": "#fff3a3",
    "red": "#ff5582",
    "blue": "#adccff",
    "green": "#bbfabb"
  }
}